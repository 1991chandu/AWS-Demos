{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "This template will setup a scalable fault tolerant multi-tier web application from scratch",
  "Parameters": {
    "KeyName": {
      "Description": "Name of an pre-existing EC2 KeyPair to enable SSH access to the instance",
      "Type": "AWS::EC2::KeyPair::KeyName",
      "Default": "kum-key",
      "ConstraintDescription": "must be the name of an existing EC2 KeyPair."
    },
    "EnvType": {
      "Description": "Choose the type of Environment",
      "Default": "test",
      "Type": "String",
      "AllowedValues": [
        "dev",
        "test",
        "prod"
      ],
      "ConstraintDescription": "Must choose the type of environment"
    }
  },
  "Mappings": {},
  "Resources": {
    "tmpVPC": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "CidrBlock": "10.0.0.0/20",
        "EnableDnsSupport": "True",
        "EnableDnsHostnames": "True",
        "InstanceTenancy": "default",
        "Tags": [
          {
            "Key": "Name",
            "Value": "kum-tmpVPC"
          }
        ]
      }
    },
    "tmpVPCIntGateway": {
      "Type": "AWS::EC2::InternetGateway",
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "kum-tmpVPCIntGateway"
          }
        ]
      }
    },
    "AttachGateway": {
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "Properties": {
        "VpcId": {
          "Ref": "tmpVPC"
        },
        "InternetGatewayId": {
          "Ref": "tmpVPCIntGateway"
        }
      }
    },
    "azAPrivateSubnet": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "VpcId": {
          "Ref": "tmpVPC"
        },
        "CidrBlock": "10.0.0.0/22",
        "AvailabilityZone": {
          "Fn::Select": [
            "0",
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "kum-azA-Private-Subnet"
          }
        ]
      }
    },
    "azAWebSubnet": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "VpcId": {
          "Ref": "tmpVPC"
        },
        "CidrBlock": "10.0.4.0/23",
        "AvailabilityZone": {
          "Fn::Select": [
            "0",
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "kum-azA-web-Subnet"
          }
        ]
      }
    },
    "azASpareSubnet": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "VpcId": {
          "Ref": "tmpVPC"
        },
        "CidrBlock": "10.0.6.0/23",
        "AvailabilityZone": {
          "Fn::Select": [
            "0",
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "kum-azA-spare-Subnet"
          }
        ]
      }
    },
    "azBPrivateSubnet": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "VpcId": {
          "Ref": "tmpVPC"
        },
        "CidrBlock": "10.0.8.0/22",
        "AvailabilityZone": {
          "Fn::Select": [
            "1",
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "kum-azB-Private-Subnet"
          }
        ]
      }
    },
    "azBWebSubnet": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "VpcId": {
          "Ref": "tmpVPC"
        },
        "CidrBlock": "10.0.12.0/23",
        "AvailabilityZone": {
          "Fn::Select": [
            "1",
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "kum-azB-web-Subnet"
          }
        ]
      }
    },
    "azBSpareSubnet": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "VpcId": {
          "Ref": "tmpVPC"
        },
        "CidrBlock": "10.0.14.0/23",
        "AvailabilityZone": {
          "Fn::Select": [
            "1",
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "kum-azB-spare-Subnet"
          }
        ]
      }
    },
    "myRouteTbl": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "tmpVPC"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "kum-myRouteTbl"
          }
        ]
      }
    },
    "PublicRoute": {
      "Type": "AWS::EC2::Route",
      "DependsOn": "tmpVPCIntGateway",
      "Properties": {
        "RouteTableId": {
          "Ref": "myRouteTbl"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "tmpVPCIntGateway"
        }
      }
    },
    "azAwebSubnetRouteTblAssn": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "SubnetId": {
          "Ref": "azAWebSubnet"
        },
        "RouteTableId": {
          "Ref": "myRouteTbl"
        }
      }
    },
    "azBWebSubnetRouteTblAssn": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "SubnetId": {
          "Ref": "azBWebSubnet"
        },
        "RouteTableId": {
          "Ref": "myRouteTbl"
        }
      }
    },
    "LoadBalancerSecGrp": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "The Security Group for the Elastic Load Balancers",
        "VpcId": {
          "Ref": "tmpVPC"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "kum-Load-Balancer-Security-Group"
          }
        ]
      }
    },
    "webSecGrp": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Security Group for Web servers",
        "VpcId": {
          "Ref": "tmpVPC"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "kum-Web-Security-Group"
          }
        ]
      }
    },
    "webSecGrpInBoundRule1": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "IpProtocol": "tcp",
        "FromPort": "22",
        "ToPort": "22",
        "CidrIp": "0.0.0.0/0",
        "GroupId": {
          "Fn::GetAtt": [
            "webSecGrp",
            "GroupId"
          ]
        }
      }
    },
    "webSecGrpInBoundRule2": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "IpProtocol": "tcp",
        "FromPort": "80",
        "ToPort": "80",
        "CidrIp": "0.0.0.0/0",
        "GroupId": {
          "Fn::GetAtt": [
            "webSecGrp",
            "GroupId"
          ]
        }
      }
    },
    "webSecGrpInBoundRule3": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "IpProtocol": "tcp",
        "FromPort": "443",
        "ToPort": "443",
        "CidrIp": "0.0.0.0/0",
        "GroupId": {
          "Fn::GetAtt": [
            "webSecGrp",
            "GroupId"
          ]
        }
      }
    },
    "dbSecGrp": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Security Group for Database servers",
        "VpcId": {
          "Ref": "tmpVPC"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "kum-DB-Security-Group"
          }
        ]
      }
    },
    "dbSecGrpInBoundRule": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "IpProtocol": "tcp",
        "FromPort": "3306",
        "ToPort": "3306",
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "webSecGrp",
            "GroupId"
          ]
        },
        "GroupId": {
          "Fn::GetAtt": [
            "dbSecGrp",
            "GroupId"
          ]
        }
      }
    },
    "dbSubnetGroup": {
      "Type": "AWS::RDS::DBSubnetGroup",
      "Properties": {
        "DBSubnetGroupDescription": "The group of subnets where RDS Instance(s) will be hosted",
        "SubnetIds": [
          {
            "Ref": "azAPrivateSubnet"
          },
          {
            "Ref": "azBPrivateSubnet"
          }
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "kum-dbSubnetGroup"
          }
        ]
      }
    }
  },
  "Outputs": {
    "KeyName": {
      "Value": {
        "Ref": "KeyName"
      },
      "Description": "The SSH Keyname to be used,"
    },
    "vpcID": {
      "Value": {
        "Ref": "tmpVPC"
      },
      "Description": "The VPC ID for the network stack"
    },
    "tmpVPCIntGateway": {
      "Value": {
        "Ref": "tmpVPCIntGateway"
      },
      "Description": "The Internet Gateway for the stack"
    },
    "azAPrivateSubnet": {
      "Value": {
        "Ref": "azAPrivateSubnet"
      },
      "Description": "The private subnet in AZ B"
    },
    "azAWebSubnet": {
      "Value": {
        "Ref": "azBWebSubnet"
      },
      "Description": "The subnet for web facing instances in AZ A"
    },
    "azASpareSubnet": {
      "Value": {
        "Ref": "azASpareSubnet"
      },
      "Description": "The spare subnet in AZ B"
    },
    "azBPrivateSubnet": {
      "Description": "The private subnet in AZ B",
      "Value": {
        "Ref": "azBPrivateSubnet"
      }
    },
    "azBWebSubnet": {
      "Value": {
        "Ref": "azAWebSubnet"
      },
      "Description": "The subnet for web facing instances in AZ B"
    },
    "azBSpareSubnet": {
      "Value": {
        "Ref": "azBSpareSubnet"
      },
      "Description": "The spare subnet in AZ B"
    },
    "LoadBalancerSecGrp": {
      "Value": {
        "Ref": "LoadBalancerSecGrp"
      },
      "Description": "The security group for load balancers"
    },
    "webSecGrp": {
      "Value": {
        "Ref": "webSecGrp"
      },
      "Description": "The security group for web facing instances"
    },
    "dbSecGrp": {
      "Value": {
        "Ref": "dbSecGrp"
      },
      "Description": "The security group for RDS / Database instances"
    },
    "dbSubnetGroup": {
      "Value": {
        "Ref": "dbSubnetGroup"
      },
      "Description": "The subnet group for RDS / Database instances"
    }
  }
}