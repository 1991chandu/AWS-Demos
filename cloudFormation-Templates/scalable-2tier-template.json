{
  "AWSTemplateFormatVersion" : "2010-09-09",
  
  "Description": "This template will setup a scalable fault tolerant multi-tier web application from scratch",
  
  "Parameters": {
    "KeyName": {
	  "Description": "The SSH Key to be used for this stack",
	  "Type": "AWS::EC2::KeyPair::KeyName",
	  "Default": "kum-key"
	}
  },
  
  "Mappings": {
    
  },
  
  "Resources": {
    "tmpVPC": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "CidrBlock": "10.0.0.0/20",
        "EnableDnsSupport": "True",
        "EnableDnsHostnames": "True",
        "InstanceTenancy": "default",
        "Tags": [
          {
            "Key": "Name",
            "Value": "kum-tmpVPC"
          }
        ]
      }
    },
    "tmpVPCIntGateway": {
      "Type": "AWS::EC2::InternetGateway",
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "kum-tmpVPC-Internet-Gateway"
          }
        ]
      }
    },
    "AttachGateway": {
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "Properties": {
        "VpcId": {
          "Ref": "tmpVPC"
        },
        "InternetGatewayId": {
          "Ref": "tmpVPCIntGateway"
        }
      }
    },
	
	"az0DbSubnet": {
	  "Type": "AWS::EC2::Subnet",
	  "Properties": {
	    "VpcId": { "Ref": "tmpVPC" },
		"CidrBlock": "10.0.0.0/22",
		"AvailabilityZone": { "Fn::Select" : [ "0", { "Fn::GetAZs" : "" } ] },
		"Tags" : [ { "Key": "Name", "Value": "kum-az0-db-Subnet" } ]
	  }
	},
	"az0WebSubnet": {
	  "Type": "AWS::EC2::Subnet",
	  "Properties": {
	    "VpcId": { "Ref": "tmpVPC" },
		"CidrBlock": "10.0.4.0/23",
		"AvailabilityZone": { "Fn::Select" : [ "0", { "Fn::GetAZs" : "" } ] },
		"Tags" : [ { "Key": "Name", "Value": "kum-az0-web-Subnet" } ]
	  }
	},
	"az0SpareSubnet": {
	  "Type": "AWS::EC2::Subnet",
	  "Properties": {
	    "VpcId": { "Ref": "tmpVPC" },
		"CidrBlock": "10.0.6.0/23",
		"AvailabilityZone": { "Fn::Select" : [ "0", { "Fn::GetAZs" : "" } ] },
		"Tags" : [ { "Key": "Name", "Value": "kum-az0-spare-Subnet" } ]
	  }
	},
	
	"az1DbSubnet": {
	  "Type": "AWS::EC2::Subnet",
	  "Properties": {
	    "VpcId": { "Ref": "tmpVPC" },
		"CidrBlock": "10.0.8.0/22",
		"AvailabilityZone": { "Fn::Select" : [ "1", { "Fn::GetAZs" : "" } ] },
		"Tags" : [ { "Key": "Name", "Value": "kum-az1-db-Subnet" } ]
	  }
	},
	"az1WebSubnet": {
	  "Type": "AWS::EC2::Subnet",
	  "Properties": {
	    "VpcId": { "Ref": "tmpVPC" },
		"CidrBlock": "10.0.12.0/23",
		"AvailabilityZone": { "Fn::Select" : [ "1", { "Fn::GetAZs" : "" } ] },
		"Tags" : [ { "Key": "Name", "Value": "kum-az1-web-Subnet" } ]
	  }
	},
	"az1SpareSubnet": {
	  "Type": "AWS::EC2::Subnet",
	  "Properties": {	
	    "VpcId": { "Ref": "tmpVPC" },
		"CidrBlock": "10.0.14.0/23",
		"AvailabilityZone": { "Fn::Select" : [ "1", { "Fn::GetAZs" : "" } ] },
		"Tags" : [ { "Key": "Name", "Value": "kum-az1-spare-Subnet" } ]
	  }
	},

	"myRouteTbl": {
	  "Type": "AWS::EC2::RouteTable",
	  "Properties": {
	    "VpcId": { "Ref": "tmpVPC" },
		"Tags" : [ { "Key": "Name", "Value": "kum-myRouteTbl" } ]
	  }
	},
	
	"routeForInternet": {
	  "Type": "AWS::EC2::Route",
	  "DependsOn": "GatewayToInternet",
	  "Properties": {
	    "RouteTableId": { "Ref": "myRouteTbl" },
		"DestinationCidrBlock": "0.0.0.0/0",
		"GatewayId": { "Ref": "tmpVPCIntGateway" }
	  }
	},
	
	"az0webSubnetRouteTblAssn": {
	  "Type": "AWS::EC2::SubnetRouteTableAssociation",
	  "Properties": {
	    "SubnetId": { "Ref": "az0webSubnet" },
		"RouteTableId": { "Ref": "myRouteTbl" }
	  }
	},
	"az1webSubnetRouteTblAssn": {
	  "Type": "AWS::EC2::SubnetRouteTableAssociation",
	  "Properties": {
	    "SubnetId": { "Ref": "az1webSubnet" },
		"RouteTableId": { "Ref": "myRouteTbl" }
	  }
	},
	
	"webSecGrp": {
	  "Type": "AWS::EC2::SecurityGroup",
	  "Properties": {
	    "Description": "Security Group for Web servers",
		"VpcId": { "Ref": "tmpVPC" }
	  }
	},
	"webSecGrpInBoundRule": {
	  "Type": "AWS::EC2::SecurityGroupIngress",
	  "Properties": [
	    {
	      "IpProtocol": "tcp",
		  "FromPort": "22",
		  "ToPort": "22",
		  "CidrIp": "0.0.0.0/0"
	    },
		{
          "IpProtocol" : "tcp",
          "FromPort" : "80",
          "ToPort" : "80",
          "CidrIp" : "0.0.0.0/0"
        },
		{
          "IpProtocol" : "tcp",
          "FromPort" : "443",
          "ToPort" : "443",
          "CidrIp" : "0.0.0.0/0"
        }
	  ],
	},
	"dbSecGrp": {
	  "Type": "AWS::EC2::SecurityGroup",
	  	"Properties": {
	    "Description": "Security Group for Database servers",
		"VpcId": { "Ref": "tmpVPC" }
	  }
	},
	"dbSecGrpInBoundRule": {
	  "Type": "AWS::EC2::SecurityGroupIngress",
	  "Properties": [
	    {
		  "IpProtocol" : "tcp",
          "FromPort" : "3306",
          "ToPort" : "3306",
		  "SourceSecurityGroupID": { "Ref": "webSecGrp" }
		}
	  ]
	},
	
	"dbSubnetGroup": {
	  "Type": "AWS::EC2::DBSubnetGroup",
	  "Properties": {
	    "DBSubnetGroupDescription": "The group of subnets where RDS Instance will be hosted",
		"SubnetIds": [ {"Ref": "az0DbSubnet"} , {"Ref": "az1DbSubnet"} ]
	  }
	}
  }
}
