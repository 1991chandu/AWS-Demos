{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "This template will setup a scalable fault tolerant multi-tier web application from scratch",
  "Parameters": {
    "KeyName": {
      "Description": "Name of an pre-existing EC2 KeyPair to enable SSH access to the instance",
      "Type": "AWS::EC2::KeyPair::KeyName",
      "Default": "kum-key",
	  "ConstraintDescription": "must be the name of an existing EC2 KeyPair."
    },
    "EnvType": {
      "Description": "Choose the type of Environment",
      "Default": "test",
      "Type": "String",
      "AllowedValues": [
        "dev",
        "test",
        "prod"
      ],
      "ConstraintDescription": "Must choose the type of environment"
    }
  },
  "Mappings": {},
  "Resources": {
    "tmpVPC": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "CidrBlock": "10.0.0.0/20",
        "EnableDnsSupport": "True",
        "EnableDnsHostnames": "True",
        "InstanceTenancy": "default",
        "Tags": [
          {
            "Key": "Name",
            "Value": "kum-tmpVPC"
          }
        ]
      }
    },
    "tmpVPCIntGateway": {
      "Type": "AWS::EC2::InternetGateway",
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "kum-tmpVPCIntGateway"
          }
        ]
      }
    },
    "AttachGateway": {
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "Properties": {
        "VpcId": {
          "Ref": "tmpVPC"
        },
        "InternetGatewayId": {
          "Ref": "tmpVPCIntGateway"
        }
      }
    },
    "azAPrivateSubnet": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "VpcId": {
          "Ref": "tmpVPC"
        },
        "CidrBlock": "10.0.0.0/22",
        "AvailabilityZone": {
          "Fn::Select": [
            "0",
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "kum-azA-Private-Subnet"
          }
        ]
      }
    },
    "azAWebSubnet": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "VpcId": {
          "Ref": "tmpVPC"
        },
        "CidrBlock": "10.0.4.0/23",
        "AvailabilityZone": {
          "Fn::Select": [
            "0",
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "kum-azA-web-Subnet"
          }
        ]
      }
    },
    "azASpareSubnet": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "VpcId": {
          "Ref": "tmpVPC"
        },
        "CidrBlock": "10.0.6.0/23",
        "AvailabilityZone": {
          "Fn::Select": [
            "0",
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "kum-azA-spare-Subnet"
          }
        ]
      }
    },
    "azBPrivateSubnet": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "VpcId": {
          "Ref": "tmpVPC"
        },
        "CidrBlock": "10.0.8.0/22",
        "AvailabilityZone": {
          "Fn::Select": [
            "1",
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "kum-azB-Private-Subnet"
          }
        ]
      }
    },
    "azBwebSubnet": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "VpcId": {
          "Ref": "tmpVPC"
        },
        "CidrBlock": "10.0.12.0/23",
        "AvailabilityZone": {
          "Fn::Select": [
            "1",
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "kum-azB-web-Subnet"
          }
        ]
      }
    },
    "azBSpareSubnet": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "VpcId": {
          "Ref": "tmpVPC"
        },
        "CidrBlock": "10.0.14.0/23",
        "AvailabilityZone": {
          "Fn::Select": [
            "1",
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "kum-azB-spare-Subnet"
          }
        ]
      }
    },
    "myRouteTbl": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "tmpVPC"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "kum-myRouteTbl"
          }
        ]
      }
    },
    "routeForInternet": {
      "Type": "AWS::EC2::Route",
      "DependsOn": "tmpVPCIntGateway",
      "Properties": {
        "RouteTableId": {
          "Ref": "myRouteTbl"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "tmpVPCIntGateway"
        }
      }
    },
    "azAwebSubnetRouteTblAssn": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "SubnetId": {
          "Ref": "azAWebSubnet"
        },
        "RouteTableId": {
          "Ref": "myRouteTbl"
        }
      }
    },
    "azBwebSubnetRouteTblAssn": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "SubnetId": {
          "Ref": "azBwebSubnet"
        },
        "RouteTableId": {
          "Ref": "myRouteTbl"
        }
      }
    },
    "webSecGrp": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Security Group for Web servers",
        "VpcId": {
          "Ref": "tmpVPC"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "kum-Web-Security-Group"
          }
        ]
      }
    },
    "webSecGrpInBoundRule1": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "IpProtocol": "tcp",
        "FromPort": "0",
        "ToPort": "22",
        "GroupId": {
          "Fn::GetAtt": [
            "webSecGrp",
            "GroupId"
          ]
        }
      }
    },
    "webSecGrpInBoundRule2": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "IpProtocol": "tcp",
        "FromPort": "0",
        "ToPort": "80",
        "GroupId": {
          "Fn::GetAtt": [
            "webSecGrp",
            "GroupId"
          ]
        }
      }
    },
    "webSecGrpInBoundRule3": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "IpProtocol": "tcp",
        "FromPort": "0",
        "ToPort": "443",
        "GroupId": {
          "Fn::GetAtt": [
            "webSecGrp",
            "GroupId"
          ]
        }
      }
    },
    "dbSecGrp": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Security Group for Database servers",
        "VpcId": {
          "Ref": "tmpVPC"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "kum-DB-Security-Group"
          }
        ]
      }
    },
    "dbSecGrpInBoundRule": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "IpProtocol": "tcp",
        "FromPort": "3306",
        "ToPort": "3306",
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "webSecGrp",
            "GroupId"
          ]
        },
        "GroupId": {
          "Fn::GetAtt": [
            "dbSecGrp",
            "GroupId"
          ]
        }
      }
    },
    "dbSubnetGroup": {
      "Type": "AWS::RDS::DBSubnetGroup",
      "Properties": {
        "DBSubnetGroupDescription": "The group of subnets where RDS Instance(s) will be hosted",
        "SubnetIds": [
          {
            "Ref": "azAPrivateSubnet"
          },
          {
            "Ref": "azBPrivateSubnet"
          }
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "kum-dbSubnetGroup"
          }
        ]
      }
    },
    "dbMySQLCustomParameterGroup": {
      "Type": "AWS::RDS::DBParameterGroup",
      "Properties": {
        "Description": "Custom Parameters for the MySQL DB Instance",
        "Family": "MySQL5.6",
        "Parameters": {
          "general_log": "ON",
          "time_zone": "Asia/Calcutta",
          "autocommit": 1
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "kum-dbMySQLCustomParameterGroup"
          }
        ]
      }
    },
	
  "rdsInstance": {
    "Type": "AWS::RDS::DBInstance",
    "Properties": {
      "DBInstanceIdentifier": "rds-mysql-inst01",
      "DBName": "wpdb01",
      "Engine": "MySQL",
      "MasterUsername": "dbuser",
      "MasterUserPassword": "dbuserpass",
      "AllocatedStorage": "5",
      "DBInstanceClass": "db.t2.micro",
      "VPCSecurityGroups": [ { "Fn::GetAtt": [ "dbSecGrp", "GroupId" ] } ],
      "DBSubnetGroupName": { "Ref": "dbSubnetGroup" },
      "DBParameterGroupName": { "Ref": "dbMySQLCustomParameterGroup" },
      "BackupRetentionPeriod": "3",
      "Port": "3306",
      "MultiAZ": "False",
      "AutoMinorVersionUpgrade": "False",
      "Tags": [
        {
          "Key": "Name",
          "Value": "kum-rds-MySQL-Db"
        },
        {
          "Key": "Role",
          "Value": "Primary"
        }
      ]
    },
	"DependsOn": "dbMySQLCustomParameterGroup",
    "DeletionPolicy": "Delete"
  }
  }
}


