{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "This template will setup a scalable fault tolerant multi-tier web application from scratch",
  "Parameters": {
    "KeyName": {
      "Description": "The SSH Key to be used for this stack",
      "Type": "AWS::EC2::KeyPair::KeyName",
      "Default": "kum-key"
    }
  },
  "Mappings": {},
  "Resources": {
    "tmpVPC": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "CidrBlock": "10.0.0.0/20",
        "EnableDnsSupport": "True",
        "EnableDnsHostnames": "True",
        "InstanceTenancy": "default",
        "Tags": [
          {
            "Key": "Name",
            "Value": "kum-tmpVPC"
          }
        ]
      }
    },
    "tmpVPCIntGateway": {
      "Type": "AWS::EC2::InternetGateway",
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "kum-tmpVPC-Internet-Gateway"
          }
        ]
      }
    },
    "AttachGateway": {
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "Properties": {
        "VpcId": {
          "Ref": "tmpVPC"
        },
        "InternetGatewayId": {
          "Ref": "tmpVPCIntGateway"
        }
      }
    },
    "azADbSubnet": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "VpcId": {
          "Ref": "tmpVPC"
        },
        "CidrBlock": "10.0.0.0/22",
        "AvailabilityZone": {
          "Fn::Select": [
            "0",
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "kum-azA-db-Subnet"
          }
        ]
      }
    },
    "azAWebSubnet": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "VpcId": {
          "Ref": "tmpVPC"
        },
        "CidrBlock": "10.0.4.0/23",
        "AvailabilityZone": {
          "Fn::Select": [
            "0",
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "kum-azA-web-Subnet"
          }
        ]
      }
    },
    "azASpareSubnet": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "VpcId": {
          "Ref": "tmpVPC"
        },
        "CidrBlock": "10.0.6.0/23",
        "AvailabilityZone": {
          "Fn::Select": [
            "0",
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "kum-azA-spare-Subnet"
          }
        ]
      }
    },
    "azBDbSubnet": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "VpcId": {
          "Ref": "tmpVPC"
        },
        "CidrBlock": "10.0.8.0/22",
        "AvailabilityZone": {
          "Fn::Select": [
            "1",
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "kum-azB-db-Subnet"
          }
        ]
      }
    },
    "azBWebSubnet": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "VpcId": {
          "Ref": "tmpVPC"
        },
        "CidrBlock": "10.0.12.0/23",
        "AvailabilityZone": {
          "Fn::Select": [
            "1",
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "kum-azB-web-Subnet"
          }
        ]
      }
    },
    "azBSpareSubnet": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "VpcId": {
          "Ref": "tmpVPC"
        },
        "CidrBlock": "10.0.14.0/23",
        "AvailabilityZone": {
          "Fn::Select": [
            "1",
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "kum-azB-spare-Subnet"
          }
        ]
      }
    },
    "myRouteTbl": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "tmpVPC"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "kum-myRouteTbl"
          }
        ]
      }
    },
    "routeForInternet": {
      "Type": "AWS::EC2::Route",
      "DependsOn": "GatewayToInternet",
      "Properties": {
        "RouteTableId": {
          "Ref": "myRouteTbl"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "tmpVPCIntGateway"
        }
      }
    },
    "azAwebSubnetRouteTblAssn": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "SubnetId": {
          "Ref": "azAwebSubnet"
        },
        "RouteTableId": {
          "Ref": "myRouteTbl"
        }
      }
    },
    "azBwebSubnetRouteTblAssn": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "SubnetId": {
          "Ref": "azBwebSubnet"
        },
        "RouteTableId": {
          "Ref": "myRouteTbl"
        }
      }
    },
    "webSecGrp": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "Description": "Security Group for Web servers",
        "VpcId": {
          "Ref": "tmpVPC"
        }
      }
    },
    "webSecGrpInBoundRule1": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "IpProtocol": "tcp",
        "FromPort": "0",
        "ToPort": "22",
        "GroupId": {
          "Fn::GetAtt": [
            "webSecGrp",
            "GroupId"
          ]
        }
      }
    },
    "webSecGrpInBoundRule2": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "IpProtocol": "tcp",
        "FromPort": "0",
        "ToPort": "80",
        "GroupId": {
          "Fn::GetAtt": [
            "webSecGrp",
            "GroupId"
          ]
        }
      }
    },
    "webSecGrpInBoundRule3": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "IpProtocol": "tcp",
        "FromPort": "0",
        "ToPort": "443",
        "GroupId": {
          "Fn::GetAtt": [
            "webSecGrp",
            "GroupId"
          ]
        }
      }
    },
    "dbSecGrp": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "Description": "Security Group for Database servers",
        "VpcId": {
          "Ref": "tmpVPC"
        }
      }
    },
    "dbSecGrpInBoundRule": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": [
        {
          "IpProtocol": "tcp",
          "FromPort": "3306",
          "ToPort": "3306",
          "SourceSecurityGroupID": {
            "Ref": "webSecGrp"
          }
        }
      ]
    },
    "dbSubnetGroup": {
      "Type": "AWS::RDS::DBSubnetGroup",
      "Properties": {
        "DBSubnetGroupDescription": "The group of subnets where RDS Instance will be hosted",
        "SubnetIds": [
          {
            "Ref": "azADbSubnet"
          },
          {
            "Ref": "azBDbSubnet"
          }
        ]
      }
    }
  }
}