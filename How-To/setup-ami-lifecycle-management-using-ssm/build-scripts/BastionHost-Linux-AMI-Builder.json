--- 
assumeRole: "{{AutomationAssumeRole}}"
description: "Updates AMI with Linux distribution packages and Amazon software. For details,see https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/sysman-ami-walkthrough.html"
mainSteps: 
  - 
    action: "aws:runInstances"
    inputs: 
      IamInstanceProfileName: "{{InstanceIamRole}}"
      ImageId: "{{SourceAmiId}}"
      InstanceType: "{{InstanceType}}"
      MaxInstanceCount: 1
      MinInstanceCount: 1
      SubnetId: "{{ SubnetId }}"
      UserData: IyEvYmluL2Jhc2gNCg0KZnVuY3Rpb24gZ2V0X2NvbnRlbnRzKCkgew0KICAgIGlmIFsgLXggIiQod2hpY2ggY3VybCkiIF07IHRoZW4NCiAgICAgICAgY3VybCAtcyAtZiAiJDEiDQogICAgZWxpZiBbIC14ICIkKHdoaWNoIHdnZXQpIiBdOyB0aGVuDQogICAgICAgIHdnZXQgIiQxIiAtTyAtDQogICAgZWxzZQ0KICAgICAgICBkaWUgIk5vIGRvd25sb2FkIHV0aWxpdHkgKGN1cmwsIHdnZXQpIg0KICAgIGZpDQp9DQoNCnJlYWRvbmx5IElERU5USVRZX1VSTD0iaHR0cDovLzE2OS4yNTQuMTY5LjI1NC8yMDE2LTA2LTMwL2R5bmFtaWMvaW5zdGFuY2UtaWRlbnRpdHkvZG9jdW1lbnQvIg0KcmVhZG9ubHkgVFJVRV9SRUdJT049JChnZXRfY29udGVudHMgIiRJREVOVElUWV9VUkwiIHwgYXdrIC1GXCIgJy9yZWdpb24vIHsgcHJpbnQgJDQgfScpDQpyZWFkb25seSBERUZBVUxUX1JFR0lPTj0idXMtZWFzdC0xIg0KcmVhZG9ubHkgUkVHSU9OPSIke1RSVUVfUkVHSU9OOi0kREVGQVVMVF9SRUdJT059Ig0KDQpyZWFkb25seSBTQ1JJUFRfTkFNRT0iYXdzLWluc3RhbGwtc3NtLWFnZW50Ig0KIFNDUklQVF9VUkw9Imh0dHBzOi8vYXdzLXNzbS1kb3dubG9hZHMtJFJFR0lPTi5zMy5hbWF6b25hd3MuY29tL3NjcmlwdHMvJFNDUklQVF9OQU1FIg0KDQppZiBbICIkUkVHSU9OIiA9ICJjbi1ub3J0aC0xIiBdOyB0aGVuDQogIFNDUklQVF9VUkw9Imh0dHBzOi8vYXdzLXNzbS1kb3dubG9hZHMtJFJFR0lPTi5zMy5jbi1ub3J0aC0xLmFtYXpvbmF3cy5jb20uY24vc2NyaXB0cy8kU0NSSVBUX05BTUUiDQpmaQ0KDQppZiBbICIkUkVHSU9OIiA9ICJ1cy1nb3Ytd2VzdC0xIiBdOyB0aGVuDQogIFNDUklQVF9VUkw9Imh0dHBzOi8vYXdzLXNzbS1kb3dubG9hZHMtJFJFR0lPTi5zMy11cy1nb3Ytd2VzdC0xLmFtYXpvbmF3cy5jb20vc2NyaXB0cy8kU0NSSVBUX05BTUUiDQpmaQ0KDQpjZCAvdG1wDQpGSUxFX1NJWkU9MA0KTUFYX1JFVFJZX0NPVU5UPTMNClJFVFJZX0NPVU5UPTANCg0Kd2hpbGUgWyAkUkVUUllfQ09VTlQgLWx0ICRNQVhfUkVUUllfQ09VTlQgXSA7IGRvDQogIGVjaG8gQVdTLVVwZGF0ZUxpbnV4QW1pOiBEb3dubG9hZGluZyBzY3JpcHQgZnJvbSAkU0NSSVBUX1VSTA0KICBnZXRfY29udGVudHMgIiRTQ1JJUFRfVVJMIiA+ICIkU0NSSVBUX05BTUUiDQogIEZJTEVfU0laRT0kKGR1IC1rIC90bXAvJFNDUklQVF9OQU1FIHwgY3V0IC1mMSkNCiAgZWNobyBBV1MtVXBkYXRlTGludXhBbWk6IEZpbmlzaGVkIGRvd25sb2FkaW5nIHNjcmlwdCwgc2l6ZTogJEZJTEVfU0laRQ0KICBpZiBbICRGSUxFX1NJWkUgLWd0IDAgXTsgdGhlbg0KICAgIGJyZWFrDQogIGVsc2UNCiAgICBpZiBbWyAkUkVUUllfQ09VTlQgLWx0IE1BWF9SRVRSWV9DT1VOVCBdXTsgdGhlbg0KICAgICAgUkVUUllfQ09VTlQ9JCgoUkVUUllfQ09VTlQrMSkpOw0KICAgICAgZWNobyBBV1MtVXBkYXRlTGludXhBbWk6IEZpbGVTaXplIGlzIDAsIHJldHJ5Q291bnQ6ICRSRVRSWV9DT1VOVA0KICAgIGZpDQogIGZpIA0KZG9uZQ0KDQppZiBbICRGSUxFX1NJWkUgLWd0IDAgXTsgdGhlbg0KICBjaG1vZCAreCAiJFNDUklQVF9OQU1FIg0KICBlY2hvIEFXUy1VcGRhdGVMaW51eEFtaTogUnVubmluZyBVcGRhdGVTU01BZ2VudCBzY3JpcHQgbm93IC4uLi4NCiAgLi8iJFNDUklQVF9OQU1FIiAtLXJlZ2lvbiAiJFJFR0lPTiINCmVsc2UNCiAgZWNobyBBV1MtVXBkYXRlTGludXhBbWk6IFVuYWJsZSB0byBkb3dubG9hZCBzY3JpcHQsIHF1aXR0aW5nIC4uLi4NCmZp
    maxAttempts: 3
    name: launchInstance
    onFailure: Abort
    timeoutSeconds: 1200
  - 
    action: "aws:runCommand"
    inputs: 
      DocumentName: AWS-RunShellScript
      InstanceIds: 
        - "{{launchInstance.InstanceIds}}"
      Parameters: 
        commands: 
          - "set -e"
          - "[ -x \"$(which wget)\" ] && get_contents='wget $1 -O -'"
          - "[ -x \"$(which curl)\" ] && get_contents='curl -s -f $1'"
          - "eval $get_contents https://aws-ssm-downloads-{{global:REGION}}.s3.amazonaws.com/scripts/aws-update-linux-instance > /tmp/aws-update-linux-instance"
          - "chmod +x /tmp/aws-update-linux-instance"
          - "/tmp/aws-update-linux-instance --pre-update-script '{{PreUpdateScript}}' --post-update-script '{{PostUpdateScript}}' --include-packages '{{IncludePackages}}' --exclude-packages '{{ExcludePackages}}' 2>&1 | tee /tmp/aws-update-linux-instance.log"
    maxAttempts: 3
    name: updateOSSoftware
    onFailure: Abort
    timeoutSeconds: 3600
  - 
    action: "aws:changeInstanceState"
    inputs: 
      DesiredState: stopped
      InstanceIds: 
        - "{{launchInstance.InstanceIds}}"
    maxAttempts: 3
    name: stopInstance
    onFailure: Abort
    timeoutSeconds: 1200
  - 
    action: "aws:createImage"
    inputs: 
      ImageDescription: "AMI Generated by EC2 Automation on {{global:DATE_TIME}} from {{SourceAmiId}}"
      ImageName: "{{TargetAmiName}}"
      InstanceId: "{{launchInstance.InstanceIds}}"
      NoReboot: true
    maxAttempts: 3
    name: createImage
    onFailure: Abort
  - 
    action: "aws:invokeLambdaFunction"
    inputs: 
      FunctionName: "{{lambdaFunctionName}}"
      Payload: "{\"parameterName\":\"BastionHost-Linux-AMI\", \"parameterValue\":\"{{createImage.ImageId}}\"}"
    maxAttempts: 1
    name: updateSsmParam
    onFailure: Abort
    timeoutSeconds: 1200
  - 
    action: "aws:changeInstanceState"
    inputs: 
      DesiredState: terminated
      InstanceIds: 
        - "{{launchInstance.InstanceIds}}"
    maxAttempts: 3
    name: terminateInstance
    onFailure: Continue
outputs: 
  - createImage.ImageId
parameters: 
  AutomationAssumeRole: 
    default: "arn:aws:iam::{{global:ACCOUNT_ID}}:role/AutomationServiceRole"
    description: "(Required) The ARN of the role that allows Automation to perform the actions on your behalf."
    type: String
  ExcludePackages: 
    default: none
    description: "(Optional) Names of packages to hold back from updates, under all conditions. By default (\"none\"), no package is excluded."
    type: String
  IncludePackages: 
    default: all
    description: "(Optional) Only update these named packages. By default (\"all\"), all available updates are applied."
    type: String
  InstanceIamRole: 
    default: ManagedInstanceProfile
    description: "(Required) The name of the role that enables Systems Manager (SSM) to manage the instance."
    type: String
  InstanceType: 
    default: t2.micro
    description: "(Optional) Type of instance to launch as the workspace host. Instance types vary by region. Default is t2.micro."
    type: String
  PostUpdateScript: 
    default: none
    description: "(Optional) URL of a script to run after package updates are applied. Default (\"none\") is to not run a script."
    type: String
  PreUpdateScript: 
    default: none
    description: "(Optional) URL of a script to run before updates are applied. Default (\"none\") is to not run a script."
    type: String
  SourceAmiId: 
    default: "{{ssm:BastionHost-Linux-AMI}}"
    description: "(Required) The source Amazon Machine Image ID."
    type: String
  SubnetId: 
    default: ""
    description: "(Required) The subnet that the created instance will be placed into."
    type: String
  TargetAmiName: 
    default: "UpdatedLinuxAmi_from_{{ssm:BastionHost-Linux-AMI}}_on_{{global:DATE_TIME}}"
    description: "(Optional) The name of the new AMI that will be created. Default is a system-generated string including the source AMI id, and the creation time and date."
    type: String
  lambdaFunctionName: 
    default: Automation-UpdateSsmParam
    description: "(Required) The name of the lambda function. Default (\"none\") is to not run a script."
    type: String
schemaVersion: "0.3"
